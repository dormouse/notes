======
About
======


本文档的生成方法:

.. code:: Bash

   conda create -n note Sphinx
   conda activate note
   pip install --upgrade myst-parser
   pip install pydata-sphinx-theme
   pip install sphinx-autobuild

.. highlight:: python

.. _howto-sphinx-markdown:

How to Use Markdown
===================

`Markdown`__ is a lightweight markup language with a simplistic plain text
formatting syntax.  It exists in many syntactically different *flavors*.  To
support Markdown-based documentation, Sphinx can use `MyST-Parser`__.
MyST-Parser is a Docutils bridge to `markdown-it-py`__, a Python package for
parsing the `CommonMark`__ Markdown flavor.

__ https://daringfireball.net/projects/markdown/
__ https://myst-parser.readthedocs.io/en/latest/
__ https://github.com/executablebooks/markdown-it-py
__ https://commonmark.org/

Configuration
--------------


To configure your Sphinx project for Markdown support, proceed as follows:


#. Install the Markdown parser *MyST-Parser*::

      pip install --upgrade myst-parser


#. Add *myst_parser* to the `extensions` configuration option::

      extensions = ['myst_parser']

   .. note::
      MyST-Parser requires Sphinx 2.1 or newer.

#. If you want to use Markdown files with extensions other than ``.md``, adjust
   the `source_suffix` variable.  The following example configures
   Sphinx to parse all files with the extensions ``.md`` and ``.txt`` as
   Markdown::

      source_suffix = {
          '.rst': 'restructuredtext',
          '.txt': 'markdown',
          '.md': 'markdown',
      }

#. You can further configure *MyST-Parser* to allow custom syntax that
   standard *CommonMark* doesn't support.  Read more in the `MyST-Parser
   documentation`__.

__ https://myst-parser.readthedocs.io/en/latest/using/syntax-optional.html

pydata-sphinx-theme
====================

Home Page: https://github.com/pydata/pydata-sphinx-theme


The theme is available on PyPI and conda-forge. You can install and use as follows:

#. Install the pydata-sphinx-theme in your doc build environment::

    pip install pydata-sphinx-theme
    # or
    conda install pydata-sphinx-theme --channel conda-forge

#. Then, in the conf.py of your sphinx docs, you update the html_theme configuration option::

    html_theme = "pydata_sphinx_theme"

sphinx-autobuild
===================

Homepage: https://github.com/executablebooks/sphinx-autobuild

Rebuild Sphinx documentation on changes, with live-reload in the browser.

Installation
----------------


sphinx-autobuild is available on PyPI. It can be installed using pip:

.. code:: Bash

    pip install sphinx-autobuild

Usage
-------------

To build a classical Sphinx documentation set, run:

.. code:: Bash

    sphinx-autobuild docs docs/_build/html

This will start a server at http://127.0.0.1:8000 and start watching for changes in the docs/ directory.
When a change is detected in docs/, the documentation is rebuilt and any open browser windows
are reloaded automatically. KeyboardInterrupt (ctrl+c) will stop the server.

Using with Makefile

    FYI: Sphinx is planning to move away from using Makefile.

To use sphinx-autobuild with the Makefile generated by Sphinx, 
add the following to the end of the Makefile:

.. code:: Bash

   livehtml:
      sphinx-autobuild "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
